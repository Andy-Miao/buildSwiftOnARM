diff --git a/utils/SwiftBuildSupport.py b/utils/SwiftBuildSupport.py
index ff57e9c..5155382 100644
--- a/utils/SwiftBuildSupport.py
+++ b/utils/SwiftBuildSupport.py
@@ -38,9 +38,9 @@ def _get_default_source_root():
     # $SWIFT_SOURCE_ROOT/swift/utils/SwiftBuildSupport.py
     (swift_path, parent_dirname) = os.path.split(os.path.dirname(__file__))
     if parent_dirname != "utils":
-        return result
+        return os.path.abspath(result)
     if not os.path.exists(os.path.join(swift_path, 'CMakeLists.txt')):
-        return result
+        return os.path.abspath(result)
     result = os.path.dirname(swift_path)
 
     # Are we in an LLVM checkout? Start from the Swift checkout and check /its/
@@ -49,12 +49,13 @@ def _get_default_source_root():
     # $SWIFT_SOURCE_ROOT/llvm/tools/swift/utils/SwiftBuildSupport.py
     (llvm_path, parent_dirname) = os.path.split(result)
     if parent_dirname != "tools":
-        return result
+        return os.path.abspath(result)
     if not os.path.exists(os.path.join(llvm_path, 'CMakeLists.txt')):
-        return result
-    result = os.path.dirname(llvm_path)
+        return os.path.abspath(result)
+    result = os.path.abspath(llvm_path)
+
+    return os.path.abspath(result)
 
-    return result
 
 # Set SWIFT_SOURCE_ROOT in your environment to control where the sources
 # are found.
diff --git a/utils/build-script b/utils/build-script
index dd68069..8916bdf 100755
--- a/utils/build-script
+++ b/utils/build-script
@@ -18,12 +18,16 @@ import pipes
 import platform
 import sys
 
+sys.path = sys.path[1:]
+sys.path.append(os.path.join(os.path.dirname(__file__), "swift_build_support"))
+
 # FIXME: Instead of modifying the system path in order to enable imports from
 #        other directories, all Python modules related to the build script
 #        should be moved to the `swift_build_support` module. Remove "noqa"
 #        markers when this is fixed.
 #        For additional information, see: https://bugs.swift.org/browse/SR-237.
 sys.path.append(os.path.dirname(__file__))
+
 from SwiftBuildSupport import (
     HOME,
     SWIFT_BUILD_ROOT,
@@ -32,8 +36,6 @@ from SwiftBuildSupport import (
     get_preset_options,
 )  # noqa (E402 module level import not at top of file)
 
-sys.path.append(os.path.join(os.path.dirname(__file__), 'swift_build_support'))
-
 # E402 means module level import not at top of file
 from swift_build_support import arguments  # noqa (E402)
 from swift_build_support import diagnostics  # noqa (E402)
@@ -56,7 +58,6 @@ import adb.commands  # noqa (E402)
 build_script_impl = os.path.join(
     SWIFT_SOURCE_ROOT, "swift", "utils", "build-script-impl")
 
-
 def call_without_sleeping(command, env=None, dry_run=False, echo=False):
     """
     Execute a command during which system sleep is disabled.
