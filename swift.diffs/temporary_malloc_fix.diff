diff --git a/stdlib/public/SwiftShims/RefCount.h b/stdlib/public/SwiftShims/RefCount.h
index e1cd7aa..6b467e9 100644
--- a/stdlib/public/SwiftShims/RefCount.h
+++ b/stdlib/public/SwiftShims/RefCount.h
@@ -1302,7 +1302,7 @@ class HeapObjectSideTableEntry {
 
   public:
   HeapObjectSideTableEntry(HeapObject *newObject)
-    : object(newObject), refCounts()
+    : object(newObject)//, refCounts()
   { }
 
 #pragma clang diagnostic push
diff --git a/stdlib/public/runtime/Heap.cpp b/stdlib/public/runtime/Heap.cpp
index 489fd56..8f4298f 100644
--- a/stdlib/public/runtime/Heap.cpp
+++ b/stdlib/public/runtime/Heap.cpp
@@ -53,11 +53,15 @@ using namespace swift;
 void *swift::swift_slowAlloc(size_t size, size_t alignMask)
     SWIFT_CC(RegisterPreservingCC_IMPL) {
   void *p;
-  if (alignMask <= MALLOC_ALIGN_MASK) {
-    p = malloc(size);
-  } else {
-    p = AlignedAlloc(size, alignMask + 1);
-  }
+//#if (defined(__linux__) && (defined(__arm__)||defined(__arm64__)))
+  p = calloc(1,size);
+//#else
+//  if (alignMask <= MALLOC_ALIGN_MASK) {
+//    p = malloc(size);
+//  } else {
+//    p = AlignedAlloc(size, alignMask + 1);
+//  }
+//#endif
   if (!p) swift::crash("Could not allocate memory.");
   return p;
 }
