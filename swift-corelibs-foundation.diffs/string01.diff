diff --git a/CoreFoundation/Base.subproj/CFRuntime.c b/CoreFoundation/Base.subproj/CFRuntime.c
index da9d2c0..ebb4bbc 100644
--- a/CoreFoundation/Base.subproj/CFRuntime.c
+++ b/CoreFoundation/Base.subproj/CFRuntime.c
@@ -1655,6 +1655,10 @@ struct _CFSwiftBridge __CFSwiftBridge = { { NULL } };
 CF_CROSS_PLATFORM_EXPORT void _CFDeinit(CFTypeRef cf) {
     __CFInfoType info = atomic_load(&(((CFRuntimeBase *)cf)->_cfinfoa));
     CFTypeID typeID = __CFTypeIDFromInfo(info);
+    if(!_CFIsSwift(typeID,cf)){
+      return;
+    }
+
     CFRuntimeClass *cfClass = __CFRuntimeClassTable[typeID];
     void (*func)(CFTypeRef) = __CFRuntimeClassTable[typeID]->finalize;
     if (NULL != func) {
diff --git a/CoreFoundation/Base.subproj/CFRuntime.h b/CoreFoundation/Base.subproj/CFRuntime.h
index d7aa26c..0f02a3c 100644
--- a/CoreFoundation/Base.subproj/CFRuntime.h
+++ b/CoreFoundation/Base.subproj/CFRuntime.h
@@ -196,10 +196,18 @@ typedef struct __CFRuntimeBase {
     uint32_t _swift_strong_rc;
     uint32_t _swift_weak_rc;
     // This is for CF's use, and must match _NSCFType layout
+#if __LP64__
     _Atomic(uint64_t) _cfinfoa;
+#else
+    _Atomic(uint32_t) _cfinfoa;
+#endif
 } CFRuntimeBase;
 
+#if __LP64__
 #define INIT_CFRUNTIME_BASE(...) {0, _CF_CONSTANT_OBJECT_STRONG_RC, 0, 0x0000000000000080ULL}
+#else
+#define INIT_CFRUNTIME_BASE(...) {0, _CF_CONSTANT_OBJECT_STRONG_RC, 0, 0x00000080UL}
+#endif
 
 #else
 
diff --git a/CoreFoundation/String.subproj/CFString.h b/CoreFoundation/String.subproj/CFString.h
index 2793bfb..b918d30 100644
--- a/CoreFoundation/String.subproj/CFString.h
+++ b/CoreFoundation/String.subproj/CFString.h
@@ -157,7 +157,11 @@ struct __CFConstStr {
         uintptr_t _cfisa;
         uint32_t _swift_strong_rc;
         uint32_t _swift_weak_rc;
+#if defined(__LP64__)
         uint64_t _cfinfoa;
+#else
+        uint32_t _cfinfoa;
+#endif
     } _base;
     uint8_t *_ptr;
 #if defined(__LP64__) && defined(__BIG_ENDIAN__)
diff --git a/TestFoundation/TestNumberFormatter.swift b/TestFoundation/TestNumberFormatter.swift
index eb64837..5913791 100644
--- a/TestFoundation/TestNumberFormatter.swift
+++ b/TestFoundation/TestNumberFormatter.swift
@@ -162,7 +162,7 @@ class TestNumberFormatter: XCTestCase {
         numberFormatter.plusSign = sign
         XCTAssertEqual(numberFormatter.plusSign, sign)
 
-#if !os(Android)
+#if !os(Android) && !arch(arm)
         let formattedString = numberFormatter.string(from: 420000000000000000)
         XCTAssertNotNil(formattedString)
         XCTAssertEqual(formattedString, "4.2Eüëç17")
